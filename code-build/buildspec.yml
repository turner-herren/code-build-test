version: 0.2  # 0.2 권장

phases:   # 빌드 단계
  install:
    runtime-versions:
      java: corretto17
    commands:
      - java -version
      - gradle -version
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - ./gradlew clean build
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

reports:
  arn:aws:codebuild:ap-northeast-2:248704842720:report-group/code-build-test-report:
    files:
      - '**/*'
    base-directory: 'build/test-results/test'
  # Code Coverage
  # arn:aws:codebuild:ap-northeast-2:248704842720:report-group/code-build-test-coverage-report:
  #   files:
  #     - 'build/jacoco-report/test/jacocoTestReport.xml'
  #   file-format: 'JACOCOXML'

artifacts:
  files:
    - '**/*'
  name: code-build-test-$(date + %Y-%m-%d)

cache:
  paths:
    - '$HOME/.m2/**/*'
    - '.gradle/**/*'


